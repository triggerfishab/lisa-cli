import client from "@sendgrid/client"
import passwordGenerator from "generate-password"
import { getProjectName } from "../../lib/app-name.js"
import * as store from "../../lib/store.js"
import { writeError, writeStep, writeSuccess } from "../../lib/write.js"
import exec from "../../lib/exec.js"

async function setupSendgridAccount() {
  let projectName = await getProjectName()

  writeStep("Creating Sendgrid subuser")

  const apiKey = await exec(
    `op item get l2i57yslyjfr5jsieew4imwxgq --fields label="sendgrid.api key"`
  ).then((res) => res.stdout.trim())

  client.setApiKey(apiKey)

  try {
    const [, ips] = await client.request({
      method: "GET",
      url: "/v3/ips/assigned",
    })

    const ip = ips[0].ip

    /*
    {
      "username": "example_subuser",
      "user_id": 1234,
      "email": "example@example.com",
      "signup_session_token": "",
      "authorization_token": "",
      "credit_allocation": {
        "type": "unlimited"
      }
    }
    */

    let body = {
      username: projectName,
      email: `${projectName}@sendgrid.triggerfish.se`,
      password: passwordGenerator.generate({
        numbers: true,
        symbols: true,
        strict: true,
      }),
      ips: [ip],
    }

    const [, subuser] = await client.request({
      method: "POST",
      url: "/v3/subusers",
      body,
    })

    writeSuccess(`Sendgrid subuser created`)

    writeStep("Creating Sendgrid subuser api key")

    /*
    {
      api_key: "",
      api_key_id: "",
      name: "",
      scopes: [""]
    }
    */
    const [, data] = await client.request({
      method: "POST",
      url: "/v3/api_keys",
      headers: {
        "on-behalf-of": subuser.username,
      },
      body: {
        name: "Web - Generated by Lisa CLI",
        scopes: [
          "mail.batch.create",
          "mail.batch.delete",
          "mail.batch.read",
          "mail.batch.update",
          "mail.send",
        ],
      },
    })

    store.set("sendgridApiKey", data.api_key)

    writeSuccess("Sendgrid subuser api key created")
  } catch (e) {
    console.error(e)
    console.error(e.response.body.errors)
    writeError("Error setting up Sendgrid subuser")
  }
}

export default setupSendgridAccount
